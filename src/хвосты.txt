< TAILS / ХВОСТЫ >

-------------- III задание --------------

- Звание пользователя. Здесь можно обойтись без какой-либо структуры и просто передавать на вход число просмотренных фильмов.

- Меню (Фильтры + Статистика). Напишите функцию, которая будет вычислять количество фильмов удовлетворяющих конкретному фильтру на основе списка всех фильмов, созданного ранее.

- Теперь давайте перепишем функции по формированию шаблона звания пользователя, шаблона меню и шаблона попапа, чтобы они на вход принимали данные.

- Далее перепишем код в main.js для работы с нашими данными. Теперь, когда мы научились автоматически генерировать данные для отрисовки, отрендерите на основе данных блоки «Top rated movies» и «Most commented». Если данных, удовлетворяющих условиям этих блоков нет, то рендерить их не нужно.

- В правом углу подвала выводится информации о количестве фильмов в сервисе. Информация обновляется один раз — при загрузке приложения.

- На главном экране в блоке «Top rated movies» и «Most commented» отображаются по две карточки фильмов. В блоке «Top rated movies» — фильмы с наивысшим рейтингом. В блоке «Most commented» — фильмы с наибольшим количеством комментариев. Если у всех фильмов одинаковый рейтинг или одинаковое количество комментариев, берутся два случайных фильма соответственно.

- Блок «Top rated movies» не отображается, если у всех фильмов рейтинг равен нулю.
- Блок «Most commented» не отображается, если отсутствуют фильмы с комментариями.





-------------- IV задание --------------

- И в заключение мы добавим ещё одну вещь для большего удобства использования нашего приложения, а конкретно сообщение о том, что в системе пока нет фильмов.
В случае отсутствия фильмов вместо списка отображается текст: «There are no movies in our database».





-------------- V задание / part 2 --------------

1 обавьте новый компонент Sort (если вы не делали этого ранее), который будет отвечать за кнопки сортировки. Для того, чтобы на шаге 4 отлавливать тип сортировки, удобно воспользоваться data-атрибутами, добавив их в разметку компонента и записав в них тип сортировки.

2 Так как сортировка часть основной страницы, то его созданием и рендерингом будет заниматься PageController. Поэтому в конструкторе PageController создайте компонент Sort, а в существуюшем методе render отрендерите его.

3 Добавте в компонент Sort метод для подписки на изменение активного типа сортировки. Этот метод принимает функцию-слушателя и будет вызывать ее когда тип активной сортировки меняется.

4 Для реализации этого метода в его теле потребуется:

5 с помощью addEventListener навесить обработчик события click на элемент сортировки
внутри обработчика события click получить тип сортировки из data-атрибута
проверить, что это не повторный клик на уже активном типе сортировки и проигнорировать его если так и есть
если клик не повторный, то вызвать переданную снаружи функцию-слушателя, передав в нее тип сортировки
На основе полученного типа сортировки отсортируйте карточки фильмов и перерендерите их.














